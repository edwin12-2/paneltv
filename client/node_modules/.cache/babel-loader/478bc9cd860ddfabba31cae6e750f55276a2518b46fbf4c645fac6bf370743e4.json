{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\AuthPage\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { AuthInput } from './AuthInput';\nimport { emailValidationMessage, passwordValidationMessage, validateEmail, validatePassword, validateUsername } from '../shared/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = ({\n  switchAuthHandler\n}) => {\n  _s();\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    username: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    passwordConf: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case 'email':\n        isValid = validateEmail(value);\n        break;\n      case 'password':\n        isValid = validatePassword(value);\n        break;\n      case 'username':\n        isValid = validateUsername(value);\n        break;\n      case 'passwordConf':\n        isValid = validate(value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  console.log(formState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      text: \"Log in to clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"email\",\n        label: \"Email\",\n        value: formState.email.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.email.showError,\n        validationMessage: emailValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"password\",\n        label: \"Password\",\n        value: formState.password.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"passsword\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.password.showError,\n        validationMessage: passwordValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"\",\n        disabled: !formState.password.isValid || !formState.email.isValid,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: switchAuthHandler,\n      className: \"auth-form-switch-label\",\n      children: \"Don 't have an account ? Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n_s(Register, \"JiMGUn9N/3bRzXX+aWwD9zIuGNQ=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Logo","AuthInput","emailValidationMessage","passwordValidationMessage","validateEmail","validatePassword","validateUsername","jsxDEV","_jsxDEV","Register","switchAuthHandler","_s","formState","setFormState","email","value","isValid","showError","password","username","passwordConf","handleInputValueChange","field","prevState","handleInputValidationOnBlur","validate","console","log","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","label","onChangeHandler","type","onBlurHandler","showErrorMessage","validationMessage","disabled","onClick","_c","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/AuthPage/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Logo } from './Logo';\r\nimport { AuthInput } from './AuthInput';\r\nimport {\r\n    emailValidationMessage, \r\n    passwordValidationMessage,\r\n    validateEmail,\r\n    validatePassword,\r\n    validateUsername\r\n} from '../shared/validators';\r\n\r\nexport const Register = ({ switchAuthHandler }) => {\r\n    const [formState, setFormState] = useState({\r\n        email: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n        password: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n        username: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n        passwordConf: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n    });\r\n\r\n    const handleInputValueChange = (value, field) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleInputValidationOnBlur = (value, field) => {\r\n        let isValid = false;\r\n\r\n        switch (field) {\r\n            case 'email':\r\n                isValid = validateEmail(value);\r\n            break;\r\n            case 'password':\r\n                isValid = validatePassword(value);\r\n                break;\r\n            case 'username':\r\n                isValid = validateUsername(value);\r\n                break;\r\n            case 'passwordConf':\r\n                isValid = validate(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                isValid,\r\n                showError: !isValid,\r\n            },\r\n        }));\r\n    };\r\n\r\n    console.log(formState);\r\n\r\n    return <div className='login-container'>\r\n        <Logo text={\"Log in to clone\"} />\r\n        <form className='auth-form'>\r\n            <AuthInput \r\n                field=\"email\" \r\n                label=\"Email\" \r\n                value={formState.email.value} \r\n                onChangeHandler={handleInputValueChange} \r\n                type = 'text'\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState.email.showError}\r\n                validationMessage={emailValidationMessage}\r\n            />\r\n            <AuthInput\r\n                field=\"password\"\r\n                label=\"Password\"\r\n                value={formState.password.value}\r\n                onChangeHandler={handleInputValueChange} \r\n                type = 'passsword'\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState.password.showError}\r\n                validationMessage={passwordValidationMessage}\r\n            />\r\n            <button\r\n                type=\"\"\r\n                disabled={!formState.password.isValid || !formState.email.isValid}\r\n            >Log in</button>\r\n        </form>\r\n        <span onClick={switchAuthHandler} className='auth-form-switch-label'>Don 't have an account ? Sign up</span>\r\n    </div>;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}