{"ast":null,"code":"import io from \"socket.io-client\";\nimport { useStore } from \"../store\";\nlet socket;\nexport const connectWithSocketServer = () => {\n  socket = io(\"http://localhost:5002\");\n  socket.on(\"connect\", () => {\n    console.log(\"successfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n  socket.on(\"chat-history\", chatHistory => {\n    const {\n      setChatHistory\n    } = useStore.getState();\n    setChatHistory(chatHistory);\n    // console.log(chatHistory);\n    // console.log(\"chat-history-came-from-the-server\");\n  });\n\n  socket.on(\"chat-message\", chatMessage => {\n    const {\n      chatHistory,\n      setChatHistory\n    } = useStore.getState();\n    console.log(\"new message came\");\n    console.log(chatMessage);\n  });\n};\nexport const getChatHistory = channelId => {\n  socket.emit(\"chat-history\", channelId);\n};\nexport const sendChatMessage = (toChannel, message) => {\n  socket.emit(\"chat-message\", {\n    toChannel,\n    message\n  });\n};\nexport const closeChatSubscription = channelId => {\n  socket.emit(\"chat-unsubscribe\", channelId);\n};","map":{"version":3,"names":["io","useStore","socket","connectWithSocketServer","on","console","log","id","chatHistory","setChatHistory","getState","chatMessage","getChatHistory","channelId","emit","sendChatMessage","toChannel","message","closeChatSubscription"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/socketConn/socketConn.js"],"sourcesContent":["import io from \"socket.io-client\";\r\nimport { useStore } from \"../store\";\r\n\r\nlet socket;\r\n\r\nexport const connectWithSocketServer = () => {\r\n  socket = io(\"http://localhost:5002\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"successfully connected with socket.io server\");\r\n    console.log(socket.id);\r\n  });\r\n\r\n  socket.on(\"chat-history\", (chatHistory) => {\r\n    const { setChatHistory } = useStore.getState();\r\n\r\n    setChatHistory(chatHistory);\r\n    // console.log(chatHistory);\r\n    // console.log(\"chat-history-came-from-the-server\");\r\n  });\r\n\r\n  socket.on(\"chat-message\", (chatMessage) => {\r\n    const { chatHistory, setChatHistory } = useStore.getState();\r\n\r\n    console.log(\"new message came\");\r\n    console.log(chatMessage);\r\n  });\r\n};\r\n\r\nexport const getChatHistory = (channelId) => {\r\n    socket.emit(\"chat-history\", channelId);\r\n  };\r\n\r\nexport const sendChatMessage = (toChannel, message) => {\r\n  socket.emit(\"chat-message\", {\r\n    toChannel,\r\n    message,\r\n  });\r\n};\r\n\r\nexport const closeChatSubscription = (channelId) => {\r\n  socket.emit(\"chat-unsubscribe\", channelId);\r\n};"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,UAAU;AAEnC,IAAIC,MAAM;AAEV,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAC3CD,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;EAEpCE,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC3DD,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACK,EAAE,CAAC;EACxB,CAAC,CAAC;EAEFL,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGI,WAAW,IAAK;IACzC,MAAM;MAAEC;IAAe,CAAC,GAAGR,QAAQ,CAACS,QAAQ,CAAC,CAAC;IAE9CD,cAAc,CAACD,WAAW,CAAC;IAC3B;IACA;EACF,CAAC,CAAC;;EAEFN,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGO,WAAW,IAAK;IACzC,MAAM;MAAEH,WAAW;MAAEC;IAAe,CAAC,GAAGR,QAAQ,CAACS,QAAQ,CAAC,CAAC;IAE3DL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,SAAS,IAAK;EACzCX,MAAM,CAACY,IAAI,CAAC,cAAc,EAAED,SAAS,CAAC;AACxC,CAAC;AAEH,OAAO,MAAME,eAAe,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACrDf,MAAM,CAACY,IAAI,CAAC,cAAc,EAAE;IAC1BE,SAAS;IACTC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIL,SAAS,IAAK;EAClDX,MAAM,CAACY,IAAI,CAAC,kBAAkB,EAAED,SAAS,CAAC;AAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}