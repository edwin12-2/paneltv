{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\DashboardPage\\\\Content\\\\Settings\\\\ChannelSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { titleValidationMessage, usernameValidationMessage, avatarUrlValidationMessage, descriptionValidationMessage } from '../../../shared/validators';\nimport { Input } from '../../../shared/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  field: \"username\",\n  label: \"Username\",\n  validationMessage: usernameValidationMessage,\n  type: \"text\"\n}, {\n  field: \"title\",\n  label: \"Title\",\n  validationMessage: titleValidationMessage,\n  type: \"text\"\n}, {\n  field: \"avatarUrl\",\n  label: \"Avatar Url\",\n  validationMessage: avatarUrlValidationMessage,\n  type: \"text\"\n}, {\n  field: \"description\",\n  label: \"Description\",\n  validationMessage: descriptionValidationMessage,\n  type: \"text\",\n  textarea: true\n}];\nexport const ChannelSettings = ({\n  settings\n}) => {\n  _s();\n  const [formState, setFormState] = useState({\n    title: {\n      isValid: false,\n      showError: false,\n      value: settings.title\n    },\n    username: {\n      isValid: false,\n      showError: false,\n      value: settings.username\n    },\n    avatarUrl: {\n      isValid: false,\n      showError: false,\n      value: settings.avatarUrl\n    },\n    description: {\n      isValid: false,\n      showError: false,\n      value: settings.description\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"settings-form\",\n    children: inputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n      field: input.field,\n      label: input.label,\n      value: formState[input.field].value,\n      onChangeHandler: handleInputValueChange,\n      onBlurHandler: handleInputValidationOnBlur,\n      showErrorMessage: formState[input.field].showError,\n      validationMessage: input.validationMessage,\n      type: input.type,\n      textarea: input.textarea\n    }, input.field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelSettings, \"HgZyPevKlFy0P3b3yVWXxZ3Qq4c=\");\n_c = ChannelSettings;\nvar _c;\n$RefreshReg$(_c, \"ChannelSettings\");","map":{"version":3,"names":["React","useState","titleValidationMessage","usernameValidationMessage","avatarUrlValidationMessage","descriptionValidationMessage","Input","jsxDEV","_jsxDEV","inputs","field","label","validationMessage","type","textarea","ChannelSettings","settings","_s","formState","setFormState","title","isValid","showError","value","username","avatarUrl","description","className","children","map","input","onChangeHandler","handleInputValueChange","onBlurHandler","handleInputValidationOnBlur","showErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/DashboardPage/Content/Settings/ChannelSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    titleValidationMessage,\r\n    usernameValidationMessage,\r\n    avatarUrlValidationMessage, \r\n    descriptionValidationMessage,\r\n} from '../../../shared/validators';\r\nimport { Input } from '../../../shared/components';\r\n\r\nconst inputs = [\r\n    {\r\n        field: \"username\",\r\n        label: \"Username\",\r\n        validationMessage: usernameValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"title\",\r\n        label: \"Title\",\r\n        validationMessage: titleValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"avatarUrl\",\r\n        label: \"Avatar Url\",\r\n        validationMessage: avatarUrlValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"description\",\r\n        label: \"Description\",\r\n        validationMessage: descriptionValidationMessage,\r\n        type: \"text\",\r\n        textarea: true,\r\n    },\r\n];\r\n\r\nexport const ChannelSettings = ( {settings } ) => {\r\n    const [ formState, setFormState ] = useState({\r\n        title: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.title,\r\n        },\r\n        username: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.username,\r\n        },\r\n        avatarUrl: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.avatarUrl,\r\n        },\r\n        description: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.description,\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <form className='settings-form'>\r\n            {inputs.map((input) => (\r\n            <Input\r\n                key={input.field}\r\n                field={input.field}\r\n                label={input.label}\r\n                value={formState[input.field].value}\r\n                onChangeHandler={handleInputValueChange}\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState[input.field].showError}\r\n                validationMessage={input.validationMessage}\r\n                type={input.type}\r\n                textarea={input.textarea}\r\n            />\r\n            ))}\r\n        </form>\r\n    );\r\n};\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACIC,sBAAsB,EACtBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,QACzB,4BAA4B;AACnC,SAASC,KAAK,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,CACX;EACIC,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE,UAAU;EACjBC,iBAAiB,EAAET,yBAAyB;EAC5CU,IAAI,EAAE;AACV,CAAC,EACD;EACIH,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,iBAAiB,EAAEV,sBAAsB;EACzCW,IAAI,EAAE;AACV,CAAC,EACD;EACIH,KAAK,EAAE,WAAW;EAClBC,KAAK,EAAE,YAAY;EACnBC,iBAAiB,EAAER,0BAA0B;EAC7CS,IAAI,EAAE;AACV,CAAC,EACD;EACIH,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,aAAa;EACpBC,iBAAiB,EAAEP,4BAA4B;EAC/CQ,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE;AACd,CAAC,CACJ;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAE;EAACC;AAAS,CAAC,KAAM;EAAAC,EAAA;EAC9C,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGlB,QAAQ,CAAC;IACzCmB,KAAK,EAAE;MACHC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAEP,QAAQ,CAACI;IACpB,CAAC;IACDI,QAAQ,EAAE;MACNH,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAEP,QAAQ,CAACQ;IACpB,CAAC;IACDC,SAAS,EAAE;MACPJ,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAEP,QAAQ,CAACS;IACpB,CAAC;IACDC,WAAW,EAAE;MACTL,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAEP,QAAQ,CAACU;IACpB;EACJ,CAAC,CAAC;EAEF,oBACIlB,OAAA;IAAMmB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC1BnB,MAAM,CAACoB,GAAG,CAAEC,KAAK,iBAClBtB,OAAA,CAACF,KAAK;MAEFI,KAAK,EAAEoB,KAAK,CAACpB,KAAM;MACnBC,KAAK,EAAEmB,KAAK,CAACnB,KAAM;MACnBY,KAAK,EAAEL,SAAS,CAACY,KAAK,CAACpB,KAAK,CAAC,CAACa,KAAM;MACpCQ,eAAe,EAAEC,sBAAuB;MACxCC,aAAa,EAAEC,2BAA4B;MAC3CC,gBAAgB,EAAEjB,SAAS,CAACY,KAAK,CAACpB,KAAK,CAAC,CAACY,SAAU;MACnDV,iBAAiB,EAAEkB,KAAK,CAAClB,iBAAkB;MAC3CC,IAAI,EAAEiB,KAAK,CAACjB,IAAK;MACjBC,QAAQ,EAAEgB,KAAK,CAAChB;IAAS,GATpBgB,KAAK,CAACpB,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUnB,CACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACtB,EAAA,CA1CWF,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}