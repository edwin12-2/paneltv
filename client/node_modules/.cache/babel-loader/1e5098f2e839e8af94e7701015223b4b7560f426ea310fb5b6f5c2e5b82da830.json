{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\AuthPage\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { emailValidationMessage, passwordValidationMessage, validateEmail, validatePassword } from '../shared/validators';\nimport { useLogin } from '../shared/hooks';\nimport { AuthInput } from './AuthInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = ({\n  switchAuthHandler\n}) => {\n  _s();\n  const {\n    login,\n    isLoading\n  } = useLogin();\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case 'email':\n        isValid = validateEmail(value);\n        break;\n      case 'password':\n        isValid = validatePassword(value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleLogin = event => {\n    event.preventDefault();\n    login(formState.email.value, formState.password.value);\n  };\n  const isSubmitButtonDisabled = isLoading || !formState.password.isValid || !formState.email.isValid;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      text: \"Log in to clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        field: \"email\",\n        label: \"Email\",\n        value: formState.email.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.email.showError,\n        validationMessage: emailValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        field: \"password\",\n        label: \"Password\",\n        value: formState.password.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"passsword\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.password.showError,\n        validationMessage: passwordValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        disabled: isSubmitButtonDisabled,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: switchAuthHandler,\n      className: \"auth-form-switch-label\",\n      children: \"Don 't have an account ? Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n_s(Login, \"Xw1kjKSusySN07WHmqm/PG2kW6E=\", false, function () {\n  return [useLogin];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Logo","emailValidationMessage","passwordValidationMessage","validateEmail","validatePassword","useLogin","AuthInput","jsxDEV","_jsxDEV","Login","switchAuthHandler","_s","login","isLoading","formState","setFormState","email","value","isValid","showError","password","handleInputValueChange","field","prevState","handleInputValidationOnBlur","handleLogin","event","preventDefault","isSubmitButtonDisabled","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","Input","label","onChangeHandler","type","onBlurHandler","showErrorMessage","validationMessage","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/AuthPage/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Logo } from './Logo';\r\nimport {\r\n    emailValidationMessage, \r\n    passwordValidationMessage,\r\n    validateEmail,\r\n    validatePassword\r\n} from '../shared/validators';\r\nimport { useLogin } from '../shared/hooks';\r\nimport { AuthInput } from './AuthInput';\r\n\r\nexport const Login = ({ switchAuthHandler }) => {\r\n    const {login, isLoading} = useLogin()\r\n\r\n    const [formState, setFormState] = useState({\r\n        email: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n        password: {\r\n            value: \"\",\r\n            isValid: false,\r\n            showError: false,\r\n        },\r\n    });\r\n\r\n    const handleInputValueChange = (value, field) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleInputValidationOnBlur = (value, field) => {\r\n        let isValid = false;\r\n\r\n        switch (field) {\r\n            case 'email':\r\n                isValid = validateEmail(value);\r\n            break;\r\n            case 'password':\r\n                isValid = validatePassword(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                isValid,\r\n                showError: !isValid,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n\r\n        login(formState.email.value, formState.password.value);\r\n    };\r\n    \r\n    const isSubmitButtonDisabled =\r\n        isLoading || !formState.password.isValid || !formState.email.isValid\r\n\r\n    return <div className='login-container'>\r\n        <Logo text={\"Log in to clone\"} />\r\n        <form className='auth-form'>\r\n            <Input \r\n                field=\"email\" \r\n                label=\"Email\" \r\n                value={formState.email.value} \r\n                onChangeHandler={handleInputValueChange} \r\n                type = 'text'\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState.email.showError}\r\n                validationMessage={emailValidationMessage}\r\n            />\r\n            <Input\r\n                field=\"password\"\r\n                label=\"Password\"\r\n                value={formState.password.value}\r\n                onChangeHandler={handleInputValueChange} \r\n                type = 'passsword'\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState.password.showError}\r\n                validationMessage={passwordValidationMessage}\r\n            />\r\n            <button\r\n                onClick={handleLogin}\r\n                disabled={isSubmitButtonDisabled}\r\n            >Log in</button>\r\n        </form>\r\n        <span onClick={switchAuthHandler} className='auth-form-switch-label'>Don 't have an account ? Sign up</span>\r\n    </div>;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}