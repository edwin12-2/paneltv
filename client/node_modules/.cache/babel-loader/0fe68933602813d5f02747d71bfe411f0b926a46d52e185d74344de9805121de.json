{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\DashboardPage\\\\Content\\\\Settings\\\\PasswordSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { passwordValidationMessage, validatePassword } from '../../../shared/validators';\nimport { Input } from '../../../shared/components';\nimport { useChangePassword } from '../../../shared/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  field: \"password\",\n  label: \"Current password\",\n  validationMessage: passwordValidationMessage,\n  type: \"password\"\n}, {\n  field: \"newPassword\",\n  label: \"New password\",\n  validationMessage: passwordValidationMessage,\n  type: \"password\"\n}];\nexport const PasswordSettings = () => {\n  _s();\n  const [formState, setFormState] = useState({\n    password: {\n      isValid: false,\n      showError: false,\n      value: \"\"\n    },\n    newPassword: {\n      isValid: false,\n      showError: false,\n      value: \"\"\n    }\n  });\n  const {\n    changePassword\n  } = useChangePassword();\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = validatePassword(value);\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const isSubmitButtonDisabled = !formState.password.isValid || !formState.newPassword.isValid;\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    // TODO\n    // Http call to change the password\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"settings-form\",\n    children: [inputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n      field: input.field,\n      label: input.label,\n      value: formState[input.field].value,\n      onBlurHandler: handleInputValidationOnBlur,\n      onChangeHandler: handleInputValueChange,\n      showErrorMessage: formState[input.field].showError,\n      validationMessage: input.validationMessage,\n      type: input.type\n    }, input.field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitButtonDisabled,\n      onClick: handleFormSubmit,\n      children: \"Save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordSettings, \"FCawHyL3RTWpFtKZLpwL6zb4lLM=\", false, function () {\n  return [useChangePassword];\n});\n_c = PasswordSettings;\nvar _c;\n$RefreshReg$(_c, \"PasswordSettings\");","map":{"version":3,"names":["React","useState","passwordValidationMessage","validatePassword","Input","useChangePassword","jsxDEV","_jsxDEV","inputs","field","label","validationMessage","type","PasswordSettings","_s","formState","setFormState","password","isValid","showError","value","newPassword","changePassword","handleInputValueChange","prevState","handleInputValidationOnBlur","isSubmitButtonDisabled","handleFormSubmit","e","preventDefault","className","children","map","input","onBlurHandler","onChangeHandler","showErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/DashboardPage/Content/Settings/PasswordSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    passwordValidationMessage,\r\n    validatePassword,\r\n} from '../../../shared/validators';\r\nimport { Input } from '../../../shared/components';\r\nimport { useChangePassword } from '../../../shared/hooks';\r\n\r\nconst inputs = [\r\n    {\r\n        field: \"password\",\r\n        label: \"Current password\",\r\n        validationMessage: passwordValidationMessage,\r\n        type: \"password\",\r\n    },\r\n    {\r\n        field: \"newPassword\",\r\n        label: \"New password\",\r\n        validationMessage: passwordValidationMessage,\r\n        type: \"password\",\r\n    },\r\n];\r\n\r\nexport const PasswordSettings = () => {\r\n    const [ formState, setFormState ] = useState({\r\n        password: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: \"\",\r\n        },\r\n        newPassword: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: \"\",\r\n        },\r\n    });\r\n\r\n    const { changePassword } = useChangePassword();\r\n\r\n    const handleInputValueChange = (value, field) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                value,\r\n            },\r\n        }));\r\n    };\r\n    \r\n    const handleInputValidationOnBlur = (value, field) => {\r\n        let isValid = validatePassword(value);\r\n\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                isValid,\r\n                showError: !isValid,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const isSubmitButtonDisabled =\r\n        !formState.password.isValid || !formState.newPassword.isValid;\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // TODO\r\n        // Http call to change the password\r\n    };\r\n\r\n    return (\r\n        <form className=\"settings-form\">\r\n            {inputs.map((input) => (\r\n                <Input\r\n                    key={input.field}\r\n                    field={input.field}\r\n                    label={input.label}\r\n                    value={formState[input.field].value}\r\n                    onBlurHandler={handleInputValidationOnBlur}\r\n                    onChangeHandler={handleInputValueChange}\r\n                    showErrorMessage={formState[input.field].showError}\r\n                    validationMessage={input.validationMessage}\r\n                    type={input.type}\r\n                />\r\n            ))}\r\n            <button disabled={isSubmitButtonDisabled} onClick={handleFormSubmit}>\r\n                Save changes\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}