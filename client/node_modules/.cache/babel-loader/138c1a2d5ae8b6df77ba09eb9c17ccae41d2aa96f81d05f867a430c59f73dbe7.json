{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getChannelSettings } from \"../../api\";\nexport const useChannelSettings = () => {\n  _s();\n  const [channelSettings, setChannelSettings] = useState(null);\n  const fetchChannelSettings = async () => {\n    const response = await getChannelSettings();\n    if (response.error) {\n      var _response$exception, _response$exception$r;\n      return toast.error(((_response$exception = response.exception) === null || _response$exception === void 0 ? void 0 : (_response$exception$r = _response$exception.response) === null || _response$exception$r === void 0 ? void 0 : _response$exception$r.data) || \"Error occurred when fetching channel settings\");\n    }\n    setChannelSettings({\n      username: response.data.username,\n      title: response.data.title,\n      description: response.data.description,\n      avatarUrl: response.data.avatarUrl,\n      streamKey: response.data.streamKey\n    });\n  };\n  const saveSettings = async data => {};\n  return {\n    isFetching: !channelSettings,\n    channelSettings,\n    saveSettings\n  };\n};\n_s(useChannelSettings, \"aaUebuXVMcQ96nTZIP2OKRJCw+4=\");","map":{"version":3,"names":["useState","getChannelSettings","useChannelSettings","_s","channelSettings","setChannelSettings","fetchChannelSettings","response","error","_response$exception","_response$exception$r","toast","exception","data","username","title","description","avatarUrl","streamKey","saveSettings","isFetching"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/shared/hooks/useChannelSettings.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getChannelSettings } from \"../../api\";\r\n\r\nexport const useChannelSettings = () => {\r\n    const [channelSettings, setChannelSettings] = useState(null);\r\n\r\n    const fetchChannelSettings = async () => {\r\n        const response = await getChannelSettings();\r\n    \r\n        if (response.error) {\r\n            return toast.error(\r\n                response.exception?.response?.data ||\r\n                \"Error occurred when fetching channel settings\"\r\n            );\r\n        }\r\n\r\n        setChannelSettings({\r\n            username: response.data.username,\r\n            title: response.data.title,\r\n            description: response.data.description,\r\n            avatarUrl: response.data.avatarUrl,\r\n            streamKey: response.data.streamKey,\r\n        });\r\n    };\r\n\r\n    const saveSettings = async (data) => {\r\n    }\r\n\r\n    return {\r\n        isFetching: !channelSettings,\r\n        channelSettings,\r\n        saveSettings,\r\n    };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,kBAAkB,QAAQ,WAAW;AAE9C,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMM,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,MAAMN,kBAAkB,CAAC,CAAC;IAE3C,IAAIM,QAAQ,CAACC,KAAK,EAAE;MAAA,IAAAC,mBAAA,EAAAC,qBAAA;MAChB,OAAOC,KAAK,CAACH,KAAK,CACd,EAAAC,mBAAA,GAAAF,QAAQ,CAACK,SAAS,cAAAH,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBF,QAAQ,cAAAG,qBAAA,uBAA5BA,qBAAA,CAA8BG,IAAI,KAClC,+CACJ,CAAC;IACL;IAEAR,kBAAkB,CAAC;MACfS,QAAQ,EAAEP,QAAQ,CAACM,IAAI,CAACC,QAAQ;MAChCC,KAAK,EAAER,QAAQ,CAACM,IAAI,CAACE,KAAK;MAC1BC,WAAW,EAAET,QAAQ,CAACM,IAAI,CAACG,WAAW;MACtCC,SAAS,EAAEV,QAAQ,CAACM,IAAI,CAACI,SAAS;MAClCC,SAAS,EAAEX,QAAQ,CAACM,IAAI,CAACK;IAC7B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAON,IAAI,IAAK,CACrC,CAAC;EAED,OAAO;IACHO,UAAU,EAAE,CAAChB,eAAe;IAC5BA,eAAe;IACfe;EACJ,CAAC;AACL,CAAC;AAAChB,EAAA,CA9BWD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}