{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\DashboardPage\\\\Content\\\\Settings\\\\ChannelSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { titleValidationMessage, usernameValidationMessage, avatarUrlValidationMessage, descriptionValidationMessage, validateUsername, validateAvatarUrl, validateTitle, validateDescription } from '../../../shared/validators';\nimport { Input } from '../../../shared/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  field: \"username\",\n  label: \"Username\",\n  validationMessage: usernameValidationMessage,\n  type: \"text\"\n}, {\n  field: \"title\",\n  label: \"Title\",\n  validationMessage: titleValidationMessage,\n  type: \"text\"\n}, {\n  field: \"avatarUrl\",\n  label: \"Avatar Url\",\n  validationMessage: avatarUrlValidationMessage,\n  type: \"text\"\n}, {\n  field: \"description\",\n  label: \"Description\",\n  validationMessage: descriptionValidationMessage,\n  type: \"text\",\n  textarea: true\n}];\nexport const ChannelSettings = ({\n  settings,\n  saveSettings\n}) => {\n  _s();\n  const [formState, setFormState] = useState({\n    title: {\n      isValid: validateTitle(settings.title),\n      showError: false,\n      value: settings.title\n    },\n    username: {\n      isValid: false,\n      showError: false,\n      value: settings.username\n    },\n    avatarUrl: {\n      isValid: false,\n      showError: false,\n      value: settings.avatarUrl\n    },\n    description: {\n      isValid: false,\n      showError: false,\n      value: settings.description\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case 'username':\n        isValid = validateUsername(value);\n        break;\n      case 'avatarUrl':\n        isValid = validateAvatarUrl(value);\n        break;\n      case 'title':\n        isValid = validateTitle(value);\n        break;\n      case 'description':\n        isValid = validateDescription(value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    saveSettings({\n      username: formState.username.value,\n      title: formState.title.value,\n      description: formState.description.value,\n      avatarUrl: formState.avatarUrl.value\n    });\n  };\n  const isSubmitButtonDisabled = !formState.username.isValid || !formState.title.isValid || !formState.description.isValid || !formState.avatarUrl.isValid;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"settings-form\",\n    children: [inputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n      field: input.field,\n      label: input.label,\n      value: formState[input.field].value,\n      onChangeHandler: handleInputValueChange,\n      onBlurHandler: handleInputValidationOnBlur,\n      showErrorMessage: formState[input.field].showError,\n      validationMessage: input.validationMessage,\n      type: input.type,\n      textarea: input.textarea\n    }, input.field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      disabled: isSubmitButtonDisabled,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelSettings, \"2KThi0NVU9mNUe01OVa0hJIerno=\");\n_c = ChannelSettings;\nvar _c;\n$RefreshReg$(_c, \"ChannelSettings\");","map":{"version":3,"names":["React","useState","titleValidationMessage","usernameValidationMessage","avatarUrlValidationMessage","descriptionValidationMessage","validateUsername","validateAvatarUrl","validateTitle","validateDescription","Input","jsxDEV","_jsxDEV","inputs","field","label","validationMessage","type","textarea","ChannelSettings","settings","saveSettings","_s","formState","setFormState","title","isValid","showError","value","username","avatarUrl","description","handleInputValueChange","prevState","handleInputValidationOnBlur","handleFormSubmit","e","preventDefault","isSubmitButtonDisabled","className","children","map","input","onChangeHandler","onBlurHandler","showErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/DashboardPage/Content/Settings/ChannelSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    titleValidationMessage,\r\n    usernameValidationMessage,\r\n    avatarUrlValidationMessage, \r\n    descriptionValidationMessage,\r\n    validateUsername,\r\n    validateAvatarUrl,\r\n    validateTitle,\r\n    validateDescription,\r\n} from '../../../shared/validators';\r\nimport { Input } from '../../../shared/components';\r\n\r\nconst inputs = [\r\n    {\r\n        field: \"username\",\r\n        label: \"Username\",\r\n        validationMessage: usernameValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"title\",\r\n        label: \"Title\",\r\n        validationMessage: titleValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"avatarUrl\",\r\n        label: \"Avatar Url\",\r\n        validationMessage: avatarUrlValidationMessage,\r\n        type: \"text\",\r\n    },\r\n    {\r\n        field: \"description\",\r\n        label: \"Description\",\r\n        validationMessage: descriptionValidationMessage,\r\n        type: \"text\",\r\n        textarea: true,\r\n    },\r\n];\r\n\r\nexport const ChannelSettings = ( {settings, saveSettings } ) => {\r\n    const [ formState, setFormState ] = useState({\r\n        title: {\r\n            isValid: validateTitle(settings.title),\r\n            showError: false,\r\n            value: settings.title,\r\n        },\r\n        username: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.username,\r\n        },\r\n        avatarUrl: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.avatarUrl,\r\n        },\r\n        description: {\r\n            isValid: false,\r\n            showError: false,\r\n            value: settings.description,\r\n        },\r\n    });\r\n\r\n    const handleInputValueChange = (value, field) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                value,\r\n            },\r\n        }));\r\n    };\r\n    \r\n    const handleInputValidationOnBlur = (value, field) => {\r\n        let isValid = false;\r\n\r\n        switch (field) {\r\n            case 'username':\r\n                isValid = validateUsername(value);\r\n            break;\r\n            case 'avatarUrl':\r\n                isValid = validateAvatarUrl(value);\r\n                break;\r\n            case 'title':\r\n                isValid = validateTitle(value);\r\n                break;\r\n            case 'description':\r\n                isValid = validateDescription(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [field]: {\r\n                ...prevState[field],\r\n                isValid,\r\n                showError: !isValid,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        saveSettings({\r\n            username: formState.username.value,\r\n            title: formState.title.value,\r\n            description: formState.description.value,\r\n            avatarUrl: formState.avatarUrl.value,\r\n        });\r\n    };\r\n\r\n    const isSubmitButtonDisabled =\r\n    !formState.username.isValid ||\r\n    !formState.title.isValid ||\r\n    !formState.description.isValid ||\r\n    !formState.avatarUrl.isValid;\r\n\r\n    return (\r\n        <form className='settings-form'>\r\n            {inputs.map((input) => (\r\n            <Input\r\n                key={input.field}\r\n                field={input.field}\r\n                label={input.label}\r\n                value={formState[input.field].value}\r\n                onChangeHandler={handleInputValueChange}\r\n                onBlurHandler={handleInputValidationOnBlur}\r\n                showErrorMessage={formState[input.field].showError}\r\n                validationMessage={input.validationMessage}\r\n                type={input.type}\r\n                textarea={input.textarea}\r\n            />\r\n            ))}\r\n            <button onClick={handleFormSubmit} disabled={isSubmitButtonDisabled}>\r\n                Save Changes\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}