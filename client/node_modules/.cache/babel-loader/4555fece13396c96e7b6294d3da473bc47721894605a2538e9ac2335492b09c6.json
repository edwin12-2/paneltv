{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programaci\\xF3n\\\\proyectos de nodeJS\\\\twitch.tv\\\\client\\\\src\\\\DashboardPage\\\\Content\\\\ChannelView\\\\ChannelView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { ReactFlvPlayer } from \"react-flv-player\";\nimport { Chat } from \"./Chat\";\nimport { ChannelDescription } from './ChannelDescription';\nimport { useChannelDetails } from '../../../shared/hooks';\nimport { LoadingSpinner } from \"../../../shared/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Stream = ({\n  streamUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-video-container\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlvPlayer, {\n      width: \"100%\",\n      height: \"100%\",\n      url: streamUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 14\n  }, this);\n};\n_c = Stream;\nexport const ChannelView = getChannels => {\n  _s();\n  const {\n    isFetching,\n    getChannelDetails,\n    channelDetails\n  } = useChannelDetails();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getChannelDetails(id);\n  }, []);\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-video-description-section\",\n      children: [channelDetails.isOnline ? /*#__PURE__*/_jsxDEV(Stream, {\n        streamUrl: channelDetails.streamUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-offline-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Channel is offline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ChannelDescription, {\n        channelId: channelDetails.id,\n        title: channelDetails.title,\n        description: channelDetails.description,\n        username: channelDetails.username,\n        getChannels: getChannels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelView, \"pHIm9pRJbBROYfm0UNIhKyUcXcc=\", false, function () {\n  return [useChannelDetails, useParams];\n});\n_c2 = ChannelView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Stream\");\n$RefreshReg$(_c2, \"ChannelView\");","map":{"version":3,"names":["React","useEffect","useParams","ReactFlvPlayer","Chat","ChannelDescription","useChannelDetails","LoadingSpinner","jsxDEV","_jsxDEV","Stream","streamUrl","className","children","width","height","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChannelView","getChannels","_s","isFetching","getChannelDetails","channelDetails","id","isOnline","channelId","title","description","username","_c2","$RefreshReg$"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/DashboardPage/Content/ChannelView/ChannelView.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ReactFlvPlayer } from \"react-flv-player\";\r\nimport { Chat } from \"./Chat\";\r\nimport { ChannelDescription } from './ChannelDescription';\r\nimport { useChannelDetails } from '../../../shared/hooks';\r\nimport { LoadingSpinner } from \"../../../shared/components\";\r\n\r\nexport const Stream = ({ streamUrl }) => {\r\n    return ( <div className='channel-video-container'>\r\n        <ReactFlvPlayer \r\n            width='100%'\r\n            height='100%'\r\n            url={streamUrl}\r\n        />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport const ChannelView = (getChannels) => {\r\n    const { isFetching, getChannelDetails, channelDetails } = useChannelDetails();\r\n    \r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getChannelDetails(id);\r\n    }, []);\r\n\r\n    if (isFetching) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div className='channel-container'>\r\n            <div className='channel-video-description-section'>\r\n                {\r\n                    channelDetails.isOnline ? (\r\n                        <Stream streamUrl={channelDetails.streamUrl} />\r\n                    ) : (\r\n                        <div className=\"channel-offline-placeholder\">\r\n                            <span>Channel is offline</span>\r\n                        </div>\r\n                    )\r\n                }\r\n                <ChannelDescription \r\n                    channelId={channelDetails.id}\r\n                    title={channelDetails.title}\r\n                    description={channelDetails.description}\r\n                    username={channelDetails.username}\r\n                    getChannels={getChannels}\r\n                />\r\n            </div>\r\n            <Chat />\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACrC,oBAASF,OAAA;IAAKG,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eAC7CJ,OAAA,CAACN,cAAc;MACXW,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbC,GAAG,EAAEL;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACC,EAAA,GATWX,MAAM;AAWnB,OAAO,MAAMY,WAAW,GAAIC,WAAW,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC,UAAU;IAAEC,iBAAiB;IAAEC;EAAe,CAAC,GAAGrB,iBAAiB,CAAC,CAAC;EAE7E,MAAM;IAAEsB;EAAG,CAAC,GAAG1B,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZyB,iBAAiB,CAACE,EAAE,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,UAAU,EAAE;IACZ,oBAAOhB,OAAA,CAACF,cAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7B;EAEA,oBACIX,OAAA;IAAKG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BJ,OAAA;MAAKG,SAAS,EAAC,mCAAmC;MAAAC,QAAA,GAE1Cc,cAAc,CAACE,QAAQ,gBACnBpB,OAAA,CAACC,MAAM;QAACC,SAAS,EAAEgB,cAAc,CAAChB;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/CX,OAAA;QAAKG,SAAS,EAAC,6BAA6B;QAAAC,QAAA,eACxCJ,OAAA;UAAAI,QAAA,EAAM;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACR,eAELX,OAAA,CAACJ,kBAAkB;QACfyB,SAAS,EAAEH,cAAc,CAACC,EAAG;QAC7BG,KAAK,EAAEJ,cAAc,CAACI,KAAM;QAC5BC,WAAW,EAAEL,cAAc,CAACK,WAAY;QACxCC,QAAQ,EAAEN,cAAc,CAACM,QAAS;QAClCV,WAAW,EAAEA;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNX,OAAA,CAACL,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACI,EAAA,CApCWF,WAAW;EAAA,QACsChB,iBAAiB,EAE5DJ,SAAS;AAAA;AAAAgC,GAAA,GAHfZ,WAAW;AAAA,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}