{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { register as registerRequest } from \"../../api\";\nimport toast from \"react-hot-toast\";\nexport const useRegister = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const register = async (email, password, username) => {\n    setIsLoading(true);\n    const response = await registerRequest({\n      email,\n      password,\n      username\n    });\n    setIsLoading(false);\n    if (response.error) {\n      var _response$exception, _response$exception$r;\n      return toast.error(((_response$exception = response.exception) === null || _response$exception === void 0 ? void 0 : (_response$exception$r = _response$exception.response) === null || _response$exception$r === void 0 ? void 0 : _response$exception$r.data) || \"Error occured while singing up in. Please try again\");\n    }\n    const {\n      userDetails\n    } = response.data;\n    localStorage.setItem(\"user\", userDetails);\n    navigate(\"/\");\n  };\n  return {\n    register,\n    isLoading\n  };\n};\n_s(useRegister, \"YFmm3y5+XgkhJ/tOnA2UTS57TCY=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","register","registerRequest","toast","useRegister","_s","isLoading","setIsLoading","navigate","email","password","username","response","error","_response$exception","_response$exception$r","exception","data","userDetails","localStorage","setItem"],"sources":["F:/ProgramaciÃ³n/proyectos de nodeJS/twitch.tv/client/src/shared/hooks/useRegister.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { register as registerRequest } from \"../../api\";\r\nimport toast from \"react-hot-toast\";\r\nexport const useRegister = () => {\r\n    const [ isLoading, setIsLoading] = useState(false);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const register = async (email, password, username) => {\r\n        setIsLoading(true);\r\n\r\n        const response = await registerRequest({\r\n            email,\r\n            password,\r\n            username,\r\n        });\r\n\r\n        setIsLoading(false);\r\n\r\n        if (response.error) {\r\n            return toast.error(response.exception?.response?.data || \r\n                \"Error occured while singing up in. Please try again\"\r\n            );        }\r\n\r\n        const { userDetails } = response.data;\r\n\r\n        localStorage.setItem(\"user\", userDetails)\r\n\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return {\r\n        register,\r\n        isLoading,\r\n    };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,IAAIC,eAAe,QAAQ,WAAW;AACvD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMC,QAAQ,GAAG,MAAAA,CAAOQ,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IAClDJ,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMK,QAAQ,GAAG,MAAMV,eAAe,CAAC;MACnCO,KAAK;MACLC,QAAQ;MACRC;IACJ,CAAC,CAAC;IAEFJ,YAAY,CAAC,KAAK,CAAC;IAEnB,IAAIK,QAAQ,CAACC,KAAK,EAAE;MAAA,IAAAC,mBAAA,EAAAC,qBAAA;MAChB,OAAOZ,KAAK,CAACU,KAAK,CAAC,EAAAC,mBAAA,GAAAF,QAAQ,CAACI,SAAS,cAAAF,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBF,QAAQ,cAAAG,qBAAA,uBAA5BA,qBAAA,CAA8BE,IAAI,KACjD,qDACJ,CAAC;IAAS;IAEd,MAAM;MAAEC;IAAY,CAAC,GAAGN,QAAQ,CAACK,IAAI;IAErCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,WAAW,CAAC;IAEzCV,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,OAAO;IACHP,QAAQ;IACRK;EACJ,CAAC;AACL,CAAC;AAACD,EAAA,CAhCWD,WAAW;EAAA,QAGHJ,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}